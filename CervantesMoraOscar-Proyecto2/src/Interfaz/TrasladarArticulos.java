/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;

import AccesoADatos.DepartamentoAD;
import Entidades.Departamento;
import Utils.Utils;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ocerv
 */
public class TrasladarArticulos extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(TrasladarArticulos.class.getName());
    private DefaultTableModel modeloTabla;

    /**
     * Creates new form TrasladarArticulos
     */
    public TrasladarArticulos() {
        initComponents();
        setLocationRelativeTo(null); // Para que la ventana aparezca en el centro de la pantalla, y no en un punto específico
        configurarTabla();
        cargarDatosEnTabla();
        cargarDepartamentosEnOrigen();
        cargarDepartamentosEnDestino();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDepartamentos = new javax.swing.JTable();
        cmbOrigen = new javax.swing.JComboBox<>();
        cmbDestino = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnTrasladar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Trasladar Artículos");

        tblDepartamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDepartamentos);

        cmbOrigen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbDestino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Departamento de origen:");

        jLabel3.setText("Departamento de destino:");

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnTrasladar.setText("Trasladar");
        btnTrasladar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrasladarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(211, 211, 211))))
            .addGroup(layout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTrasladar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(360, 360, 360))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(cmbOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(cmbDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnTrasladar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVolver)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        TrasladarArticulos.this.dispose();
        VentanaPrincipal ventanaPrincipal = new VentanaPrincipal();
        ventanaPrincipal.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnTrasladarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrasladarActionPerformed
        // TODO add your handling code here:
        String validar = validacionesParaTrasladar();
        if(Utils.isNullOrWhiteSpace(validar)){
            String textoOrigen = cmbOrigen.getSelectedItem().toString();
            String textoDestino = cmbDestino.getSelectedItem().toString();
            String idDepartamentoOrigen = textoOrigen.substring(0,textoOrigen.indexOf(" - "));
            String idDepartamentoDestino = textoDestino.substring(0,textoDestino.indexOf(" - "));
            Departamento departamentoOrigen = DepartamentoAD.consultarPorId(Integer.parseInt(idDepartamentoOrigen));
            Departamento departamentoDestino = DepartamentoAD.consultarPorId(Integer.parseInt(idDepartamentoDestino));
            
            while(!departamentoOrigen.getArticulos().isEmpty() && !departamentoDestino.getArticulos().isFull()){
                departamentoDestino.getArticulos().enqueue(departamentoOrigen.getArticulos().dequeue());
            }
            cargarDatosEnTabla();
            cargarDepartamentosEnOrigen();
            cargarDepartamentosEnDestino();
        }
        
        else JOptionPane.showMessageDialog(this,validar);
    }//GEN-LAST:event_btnTrasladarActionPerformed

    private String validacionesParaTrasladar(){
        if(DepartamentoAD.consultarDepartamentos().length < 2) return "La pila de departamentos debe tener al menos 2 elementos registrados.";
        
        String textoOrigen = cmbOrigen.getSelectedItem().toString();
        String textoDestino = cmbDestino.getSelectedItem().toString();
        String idDepartamentoOrigen = textoOrigen.substring(0,textoOrigen.indexOf(" - "));
        String idDepartamentoDestino = textoDestino.substring(0,textoDestino.indexOf(" - "));
        Departamento departamentoOrigen = DepartamentoAD.consultarPorId(Integer.parseInt(idDepartamentoOrigen));
        Departamento departamentoDestino = DepartamentoAD.consultarPorId(Integer.parseInt(idDepartamentoDestino));
        
        if(departamentoOrigen.getArticulos().isEmpty()) return "El departamento de origen debe tener al menos un artículo registrado.";
        if(textoOrigen.equals(textoDestino)) return "El departamento de origen y de destino deben ser diferentes.";
        if(departamentoDestino.getArticulos().isFull()) return "La cola de artículos del departamento de destino está llena.";
        return "";
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new TrasladarArticulos().setVisible(true));
    }
    
    private void configurarTabla(){
        String[] nombresColumnas = {"Id", "Nombre", "Artículos"};
        modeloTabla = new DefaultTableModel(nombresColumnas, 0) {
            //Convierte las celdas de la tabla en No Editables
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        // Asigna el modelo recién creado a la tabla que va a mostar los datos
        tblDepartamentos.setModel(modeloTabla);
    }
    
    private void cargarDatosEnTabla(){
    modeloTabla.setRowCount(0); // Limpia la tabla antes de cargar nuevos datos

    Departamento[] listaDeDepartamentos = DepartamentoAD.consultarDepartamentos();

        for(int i = 0; i < listaDeDepartamentos.length; i++){
            if (listaDeDepartamentos[i] != null) {
                Object[] fila = new Object[3];
                fila[0] = listaDeDepartamentos[i].getId();
                fila[1] = listaDeDepartamentos[i].getNombre();
                fila[2] = listaDeDepartamentos[i].getArticulos();

                modeloTabla.addRow(fila);
            }
        }
    }
    
    private void cargarDepartamentosEnOrigen(){
        DefaultComboBoxModel<String> modelCmbOrigen = new DefaultComboBoxModel<>();
        Departamento[] departamentos = DepartamentoAD.consultarDepartamentos();
        
        for(int i = 0 ; i < departamentos.length; i++){
            if(departamentos[i] != null /*&& departamentos[i].getArticulos().size() > 0*/) modelCmbOrigen.addElement(departamentos[i].toString());
        }
        cmbOrigen.setModel(modelCmbOrigen);
    }
    
    private void cargarDepartamentosEnDestino(){
        DefaultComboBoxModel<String> modelCmbDestino = new DefaultComboBoxModel<>();
        Departamento[] departamentos = DepartamentoAD.consultarDepartamentos();
        
        for(int i = 0 ; i < departamentos.length; i++){
            if(departamentos[i] != null) modelCmbDestino.addElement(departamentos[i].toString());
        }
        cmbDestino.setModel(modelCmbDestino);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTrasladar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbDestino;
    private javax.swing.JComboBox<String> cmbOrigen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDepartamentos;
    // End of variables declaration//GEN-END:variables
}
